attach(mtcars)
fit = lm(mpg ~ wt + qsec)
# hat matrix:
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_0 <- sum(residuals^2))


# Noise1:
NOISE1 = rnorm(nrow(mtcars))
A = cbind(A,NOISE1)
fit = lm(mpg ~ wt + qsec + NOISE1)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_1 <- sum(residuals^2))

# Noise2:
NOISE2 = rnorm(nrow(mtcars))
A = cbind(A,NOISE2)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_2 <- sum(residuals^2))

# Noise3:
NOISE3 = rnorm(nrow(mtcars))
A = cbind(A,NOISE3)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2 + NOISE3)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_3 <- sum(residuals^2))

# Noise4:
NOISE4 = rnorm(nrow(mtcars))
A = cbind(A,NOISE4)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2 + NOISE3 + NOISE4)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_4 <- sum(residuals^2))

#Noise5:

NOISE5 = rnorm(nrow(mtcars))
A = cbind(A,NOISE5)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2 + NOISE3 + NOISE4 + NOISE5)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_5 <- sum(residuals^2))

#Noise6:
NOISE6 = rnorm(nrow(mtcars))
A = cbind(A,NOISE6)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2 + NOISE3 + NOISE4 + NOISE5 + NOISE6)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_6 <- sum(residuals^2))

#Noise7:
NOISE7 = rnorm(nrow(mtcars))
A = cbind(A,NOISE7)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2 + NOISE3 + NOISE4 + NOISE5 + NOISE6 + NOISE7)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_7 <- sum(residuals^2))

#Noise8:
NOISE8 = rnorm(nrow(mtcars))
A = cbind(A,NOISE8)
fit = lm(mpg ~ wt + qsec + NOISE1 + NOISE2 + NOISE3 + NOISE4 + NOISE5 + NOISE6 + NOISE7 + NOISE8)
A = model.matrix(fit)
AtAin = solve(t(A) %*% A)
HAT = A%*%AtAin%*%t(A)
y_hat = HAT%*%mpg
residuals = mpg - y_hat
(rss_8 <- sum(residuals^2))

number_random_regressors = c(0:8)
plot(c(rss_0,rss_1,rss_2,rss_3,rss_4,rss_5,rss_6,rss_7,rss_8) ~ number_random_regressors,
     type = "l", lwd=2, col = 'firebrick', ylab = "RSS", xlab = "Number of Random Regressors",
     main = "Decreasing RSS with Increasing No. Regressors")
