suit <- c("spd","hrt","dimd","clbs")
rank  <- c("A", 2:10,"J","Q","K")
deck <- as.matrix(expand.grid('rank' = rank, 'suit' = suit))
draw <- function (n) deck[sample(nrow(deck), n), ]
draw(5)

## For a pair:
iterations <- 1e6
counter <- 0
for (i in 1:iterations){
s <- draw(5)
if(length(unique(s[ , 1])) == 4) counter <- counter + 1
}
counter/iterations * 100

# 42.3218% versus Wikipedia 42.2569%

## For three of a kind:
iterations <- 1e6
counter <- 0
for (i in 1:iterations){
    s <- draw(5)
    if((max(table(s[ , 1])) == 3) & (length(unique(s[ , 1])) == 3)) counter <- counter + 1
}
counter/iterations * 100

# 2.1183% versus Wikipedia 2.1128%

## For straight (excluding royal and straight flush)

value_order <- c("A", 2:10,"J","Q","K")  
    
iterations <- 1e6
counter <- 0
for (i in 1:iterations){
    s <- draw(5)
    if((all(diff(sort(match(s[,1], value_order))) == 1)) & (length(unique(s[,2])) > 1)) counter <- counter + 1
}
counter/iterations * 100

#0.3504% versus Wikipedia 0.3925%


# For flush (excluding royal flush and straight flush):

value_order <- c("A", 2:10,"J","Q","K")  

iterations <- 1e6
counter <- 0
for (i in 1:iterations){
    s <- draw(5)
    if(((any(diff(sort(match(s[,1], value_order))) != 1)))&(length(unique(s[ ,2])) == 1)) counter <- counter + 1
}
counter/iterations * 100


#0.1931% versus Wikipedia 0.1965%

# For full house:

iterations <- 1e6
counter <- 0
for (i in 1:iterations){
    s <- draw(5)
    if((max(table(s[ , 1])) == 3) & (length(unique(s[ , 1])) == 2)) counter <- counter + 1
}
counter/iterations * 100


# 0.1483% versus Wikipedia 0.1441%

# Four of a kind:

iterations <- 1e6
counter <- 0
for (i in 1:iterations){
    s <- draw(5)
    if(max(table(s[ , 1])) == 4) counter <- counter + 1
}
counter/iterations * 100

# 0.022% versus Wikipedia 0.0240%

# Straight flush (excluding royal flush):

value_order <- c("A", 2:10,"J","Q","K")  

iterations <- 1e6
for (i in 1:iterations){
    s <- draw(5)
    if((all(diff(sort(match(s[,1], value_order))) == 1)) & (length(unique(s[,2])) == 1)) counter <- counter + 1
}

counter/iterations * 100

# 0.0254% versus Wikipedia 0.00139%	

# Royal flush:

iterations <- 1e7
for (i in 1:iterations){
    s <- draw(5)
    if((sum(na.omit(match(c('10','J','Q','K','A'), s[,1])))==15) & (length(unique(s[,2])) == 1)) counter <- counter + 1
}

counter/iterations * 100

# 0.00265% versus Wikipedia 0.000154%
